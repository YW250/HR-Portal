{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YW\\\\Desktop\\\\portal_project_repack\\\\src\\\\components\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport galleryImages from '../data/galleryData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Gallery() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'rgba(255,255,255,0.75)',\n      padding: '1rem',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), galleryImages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No images uploaded yet. Update \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"galleryData.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 43\n      }, this), \" to add images.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '10px'\n      },\n      children: galleryImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.src,\n        alt: img.title,\n        title: img.title,\n        onClick: () => setSelectedImage(img),\n        style: {\n          width: '200px',\n          height: '150px',\n          objectFit: 'cover',\n          cursor: 'pointer',\n          borderRadius: '6px'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setSelectedImage(null),\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.75)',\n        zIndex: 9999,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        cursor: 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage.src,\n        alt: selectedImage.title,\n        style: {\n          maxWidth: '90%',\n          maxHeight: '80vh',\n          borderRadius: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'white',\n          marginTop: '1rem'\n        },\n        children: selectedImage.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(Gallery, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","galleryImages","jsxDEV","_jsxDEV","Gallery","_s","selectedImage","setSelectedImage","style","backgroundColor","padding","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","length","display","flexWrap","gap","map","img","index","src","alt","title","onClick","width","height","objectFit","cursor","position","top","left","right","bottom","zIndex","alignItems","justifyContent","flexDirection","maxWidth","maxHeight","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/YW/Desktop/portal_project_repack/src/components/Gallery.js"],"sourcesContent":["import React, { useState } from 'react';\nimport galleryImages from '../data/galleryData';\n\nfunction Gallery() {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  return (\n    <div style={{ backgroundColor: 'rgba(255,255,255,0.75)', padding: '1rem', borderRadius: '8px' }}>\n      <h2>Gallery</h2>\n\n      {galleryImages.length === 0 ? (\n        <p>No images uploaded yet. Update <code>galleryData.js</code> to add images.</p>\n      ) : (\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n          {galleryImages.map((img, index) => (\n            <img\n              key={index}\n              src={img.src}\n              alt={img.title}\n              title={img.title}\n              onClick={() => setSelectedImage(img)}\n              style={{ width: '200px', height: '150px', objectFit: 'cover', cursor: 'pointer', borderRadius: '6px' }}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Expanded View */}\n      {selectedImage && (\n        <div\n          onClick={() => setSelectedImage(null)}\n          style={{\n            position: 'fixed',\n            top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.75)',\n            zIndex: 9999,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            cursor: 'pointer'\n          }}\n        >\n          <img src={selectedImage.src} alt={selectedImage.title} style={{ maxWidth: '90%', maxHeight: '80vh', borderRadius: '8px' }} />\n          <h4 style={{ color: 'white', marginTop: '1rem' }}>{selectedImage.title}</h4>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Gallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}